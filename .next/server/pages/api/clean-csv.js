"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/clean-csv";
exports.ids = ["pages/api/clean-csv"];
exports.modules = {

/***/ "formidable":
/*!*****************************!*\
  !*** external "formidable" ***!
  \*****************************/
/***/ ((module) => {

module.exports = require("formidable");

/***/ }),

/***/ "papaparse":
/*!****************************!*\
  !*** external "papaparse" ***!
  \****************************/
/***/ ((module) => {

module.exports = require("papaparse");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("fs");

/***/ }),

/***/ "(api)/./pages/api/clean-csv.js":
/*!********************************!*\
  !*** ./pages/api/clean-csv.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"config\": () => (/* binding */ config),\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var papaparse__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! papaparse */ \"papaparse\");\n/* harmony import */ var papaparse__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(papaparse__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var formidable__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! formidable */ \"formidable\");\n/* harmony import */ var formidable__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(formidable__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! fs */ \"fs\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(fs__WEBPACK_IMPORTED_MODULE_2__);\n\n\n\nconst config = {\n    api: {\n        bodyParser: false\n    }\n};\nfunction cleanName(name) {\n    return name.replace(/[^a-zA-Z\\s]/g, \"\").trim().split(/\\s+/)[0] || \"\";\n}\nasync function handler(req, res) {\n    if (req.method !== \"POST\") {\n        return res.status(405).json({\n            error: \"Only POST requests are allowed.\"\n        });\n    }\n    try {\n        const form = new (formidable__WEBPACK_IMPORTED_MODULE_1___default().IncomingForm)();\n        form.parse(req, async (err, fields, files)=>{\n            if (err) {\n                console.error(\"Error parsing uploaded files:\", err);\n                return res.status(500).json({\n                    error: \"Error parsing uploaded files.\"\n                });\n            }\n            const fileKeys = Object.keys(files);\n            if (fileKeys.length === 0) {\n                return res.status(400).json({\n                    error: \"No CSV files uploaded.\"\n                });\n            }\n            const headers = [\n                \"First Name\",\n                \"Last Name\",\n                \"Headline\",\n                \"Location\",\n                \"Current Title\",\n                \"Current Company\",\n                \"Email Address\",\n                \"Phone Number\",\n                \"Profile URL\",\n                \"Active Project\",\n                \"Notes\",\n                \"Feedback\", \n            ];\n            let combinedData = [\n                headers\n            ];\n            let isFirstFile = true;\n            for (let key of fileKeys){\n                const file = files[key];\n                const fileContent = fs__WEBPACK_IMPORTED_MODULE_2___default().readFileSync(file.filepath, {\n                    encoding: \"utf-8\"\n                });\n                if (!fileContent) {\n                    return res.status(500).json({\n                        error: `Could not read file: ${file.originalFilename}`\n                    });\n                }\n                let parsedData;\n                try {\n                    parsedData = (0,papaparse__WEBPACK_IMPORTED_MODULE_0__.parse)(fileContent, {\n                        header: true,\n                        skipEmptyLines: true\n                    }).data;\n                } catch (parsingError) {\n                    console.error(`Error parsing file ${file.originalFilename}:`, parsingError.message);\n                    return res.status(500).json({\n                        error: `Error parsing file: ${file.originalFilename}`\n                    });\n                }\n                const dataToMerge = isFirstFile ? parsedData : parsedData.slice(1);\n                isFirstFile = false;\n                dataToMerge.forEach((row)=>{\n                    row[\"First Name\"] = cleanName(row[\"First Name\"] || \"\");\n                    const rowArray = headers.map((header)=>row[header] || \"\");\n                    combinedData.push(rowArray);\n                });\n            }\n            const uniqueRows = Array.from(new Set(combinedData.map(JSON.stringify))).map(JSON.parse);\n            const cleanedCsv = (0,papaparse__WEBPACK_IMPORTED_MODULE_0__.unparse)(uniqueRows);\n            res.status(200).json([\n                cleanedCsv\n            ]);\n        });\n    } catch (error) {\n        console.error(\"Error in the handler function:\", error);\n        res.status(500).json({\n            error: \"Unexpected server error occurred.\"\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./pages/api/clean-csv.js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("(api)/./pages/api/clean-csv.js"));
module.exports = __webpack_exports__;

})();